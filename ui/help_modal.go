package ui

import (
	"github.com/gdamore/tcell/v2"
	"github.com/rivo/tview"
)

type HelpModal struct {
	app *App
}

func NewHelpModal(app *App) *HelpModal {
	return &HelpModal{app: app}
}

func (hm *HelpModal) Create() *tview.Modal {
	helpText := `ðŸš€ TUI-GPT Help

ðŸ“‹ Key Bindings:
â€¢ Enter        - Send message
â€¢ Ctrl+C       - Quit application (auto-saves)
â€¢ Ctrl+H       - Show/hide this help
â€¢ Ctrl+L       - Clear conversation
â€¢ Ctrl+N       - Start new chat
â€¢ Ctrl+S       - Save current chat
â€¢ Ctrl+O       - Open chat history
â€¢ Ctrl+-       - Switch AI models
â€¢ Tab          - Navigate between elements
â€¢ Shift+Tab    - Navigate backwards
â€¢ Ctrl+U       - Clear input field

ðŸ¤– AI Models:
â€¢ Switch between different Groq models
â€¢ Default: Llama 3 70B for best performance
â€¢ Use Ctrl+- to change models anytime

ðŸ’¾ Chat Storage:
â€¢ Chats are automatically saved locally
â€¢ Access previous chats with Ctrl+O
â€¢ Each chat gets a title from first message

ðŸ’¡ Tips:
â€¢ Type your message and press Enter
â€¢ Use "New" button to start fresh chat
â€¢ All chats are saved in 'chat_history' folder`

	modal := tview.NewModal().
		SetText(helpText).
		AddButtons([]string{"Close"}).
		SetDoneFunc(func(buttonIndex int, buttonLabel string) {
			hm.app.pages.HidePage("help")
		}).
		SetTextColor(tcell.ColorBlack)

	modal.SetBorderColor(tcell.ColorYellow)
	modal.SetTitle(" Help & Instructions ")
	modal.SetTitleColor(tcell.ColorBlack)

	return modal
}
